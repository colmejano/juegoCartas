import java.util.ArrayList;

public class BarajaFrancesa extends Baraja{
	//Se ha decidido utilizar una lista ya que la dimensión de la baraja se irá reduciendo a medida que se sacan cartas
		ArrayList<CartaFrancesa> baraja;
		
		
		
		/**
		 * PRE: Constructor por defecto
		 * POST: Crea una baraja española completa ordeanada por palos
		 * EXCEPCIONES:
		 */
		public BarajaFrancesa(){
			baraja = new ArrayList<CartaFrancesa>(52);
			for(int i=1;i<=13;i++){
				baraja.add(new CartaFrancesa(i,CartaFrancesa.Palo.PICAS));
			}
			int j=1;
			for(int i=14;i<=26;i++){
				baraja.add(new CartaFrancesa(j,CartaFrancesa.Palo.CORAZONES));
				j++;
			}
			j=1;
			for(int i=27;i<=39;i++){
				baraja.add(new CartaFrancesa(j,CartaFrancesa.Palo.TREVOLES));
				j++;
			}
			j=1;
			for(int i=40;i<=52;i++){
				baraja.add(new CartaFrancesa(j,CartaFrancesa.Palo.DIAMANTES));
				j++;
			}
		}
		
		
		/**
		 * PRE: 
		 * POST: Coge la baraja y la ordena de forma aleatoria
		 * EXCEPCIONES:
		 */
		public void mezclar(){
			int h = baraja.size();
			ArrayList<CartaFrancesa> lista = new ArrayList<CartaFrancesa>(h);
			for(int i=0;i<h;i++){
				lista.add(this.baraja.get(i));
			}
			baraja.clear();
			for(int i=0;i<h;i++){
				int j=(int)(Math.random()*(h-i));
				baraja.add(lista.get(j));
				lista.remove(j);
			}
		}
		
		
		/** PRE:
		 * POST: Coge una carta de la baraja
		 * EXCEPCIONES: ERROR_BarajaVacía si la baraja está vacía, devuelve null
		 */
		public Carta cogerCarta(){
			if(this.baraja.isEmpty()){
				System.err.println("ERROR_BarajaVacía: Operación no permitida");
				return null;
			}
			Carta carta;
			carta = baraja.get(0);
			baraja.remove(0);
			return carta;
		}
}
